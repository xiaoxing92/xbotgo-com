{% schema %}
{
  "name": "Carousel Card",
  "class": "section-carousel-card",
  "max_blocks": 3,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Carousel Card"
    }
  ],
  "blocks": [
    {
      "type": "card_block",
      "name": "Card",
      "settings": [
        {
          "type": "image_picker",
          "id": "cover",
          "label": "Image"
        },
        {
          "id": "title",
          "type": "textarea",
          "label": "title",
          "default": "title"
        },
        {
          "id": "subtitle",
          "type": "text",
          "label": "Subtitle",
          "default": "Subtitle"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Carousel Card",
      "settings": {},
      "blocks": [{ "type": "card_block" }, { "type": "card_block" }, { "type": "card_block" }]
    }
  ]
}
{% endschema %}

<div id='section-id-{{ section.id }}' class='container'>
  {% if section.settings.title != blank %}
    <h2 class='hometitle h4 align-center' {%- render 'animation-attrs', attrs: 'data-cc-animate' -%}>
      {{- section.settings.title | escape -}}
    </h2>
  {% endif %}
  <div class='carousel'>
    <button class='arrow left' id='prevBtn'>&lt;</button>
    <div class='carousel-card-track'>
      {% for block in section.blocks %}
        <div class='carousel-item'>
          <img src='{{ block.settings.cover | img_url: 'x428' }}'>
          <div class="carousel-bot">
            <h3 class="title">{{ block.settings.title }}</h3>
            <p class="subtitle">{{ block.settings.subtitle }}</p>
          </div>
        </div>
      {% endfor %}
    </div>
    <button class='arrow right' id='nextBtn'>&gt;</button>
  </div>
</div>

<script>
  const observer = new MutationObserver(() => {
    const track = document.querySelector('.carousel-card-track')
    const items = Array.from(track.children)
    const prevBtn = document.getElementById('prevBtn')
    const nextBtn = document.getElementById('nextBtn')

    let currentIndex = 0

    function updateCarousel() {
      const width = items[0].getBoundingClientRect().width
      track.style.transform = `translateX(-${currentIndex * width}px)`
    }

    prevBtn.addEventListener('click', () => {
      currentIndex = Math.max(0, currentIndex - 1)
      updateCarousel()
    })

    nextBtn.addEventListener('click', () => {
      currentIndex = Math.min(items.length - 1, currentIndex + 1)
      updateCarousel()
    })

    window.addEventListener('resize', updateCarousel)

    updateCarousel()
  })

  observer.observe(document.body, { childList: true, subtree: true })
</script>

<style>
  .carousel {
    position: relative;
    overflow: hidden;
  }

  .carousel-card-track {
    display: flex;
    gap: 10px;
    transition: transform 0.3s ease-in-out;
    will-change: transform;
  }

  .carousel-item {
    display: flex;
    flex-direction: column;
    min-width: calc(50% - 10px);
    text-align: center;
    background:#F5F5F7;
    border: 1px solid #f3f3f4;
    border-radius: 10px;
    overflow: hidden;
  }
  .carousel-bot{
    display: flex;
    justify-content: center;
    flex-direction: column;
    flex: 1;
    padding: 10px;
  }
  .carousel-item img {
    max-width: 100%;
  }
  .title{
    font-size:12px;
    text-align: left;
    margin-bottom:0;
  }
  .subtitle{
    font-size:12px;
    text-align: left;
    color:#000000;
    margin-bottom:0;
  }

  .arrow {
    position: absolute;
    top: 35%;
    transform: translateY(-50%);
    color: rgba(0, 0, 0, 0.5);
    border: none;
    cursor: pointer;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    background-color: rgba(255, 255, 255, 0.7);
    z-index: 1001;
  }

  .arrow.left {
    left: 10px;
  }

  .arrow.right {
    right: 10px;
  }

  .arrow:focus {
    outline: none;
  }

  @media (min-width: 481px) and (max-width: 768px) {  
    .carousel-card-track {
      flex-wrap: nowrap;
    }

    .carousel-item {
      min-width: 100%;
      flex-grow: 1;
      height: 450px;
    }
    .title{
      font-size:20px;
      margin-bottom: 25px;
    }
    .subtitle{ 
      font-size:15px;
    }
    .arrow {
      display: none;
    }
  }
</style>
