<div id='section-id-{{ section.id }}' class='container carousel-container'>
    <button class='carousel-btn left-btn'>&lt;</button>
    <div class='carousel'>
      <div class='carousel-track'>
        {% for block in section.blocks %}
            <img src='{{ block.settings.img | img_url: '340x428'}}'>
        {% endfor %}
      </div>
    </div>
    <button class='carousel-btn right-btn'>&gt;</button>
</div>


<script>
  const observer = new MutationObserver(() => {
    const track = document.querySelector('.carousel-track')
    const leftBtn = document.querySelector('.left-btn')
    const rightBtn = document.querySelector('.right-btn')
    const images = document.querySelectorAll('.carousel-track img')

    let currentIndex = 0

    function updateCarousel() {
      const imageWidth = images[0].clientWidth
      track.style.transform = `translateX(-${currentIndex * imageWidth}px)`
    }

    leftBtn.addEventListener('click', () => {
      if (currentIndex > 0) {
        currentIndex--
        updateCarousel()
      }
    })

    rightBtn.addEventListener('click', () => {
      if (currentIndex < images.length - 2) {
        // 显示两个图片
        currentIndex++
        updateCarousel()
      }
    })

    // 初始化设置，仅在移动端执行滚动逻辑
    if (window.innerWidth <= 768) {
      updateCarousel()
    }
  })

  observer.observe(document.body, { childList: true, subtree: true })
</script>

<style>
  .carousel-container {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    width: 100%;
    margin: 20px 0;
  }

  .carousel {
    overflow: hidden;
    flex: 1;
  }

  .carousel-track {
    display: flex;
    transition: transform 0.3s ease-in-out;
    gap: 10px;
  }

  .carousel-track img {
    flex-shrink: 0;
    border-radius: 15px;
    overflow: hidden;
  }

  .carousel-btn {
    position: absolute;
    top: 55%;
    transform: translateY(-50%);
    color: rgba(0, 0, 0, 0.5);
    border: none;
    cursor: pointer;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    background-color: rgba(255, 255, 255, 0.7);
    z-index: 1001;
  }

  /* 左右按钮 */
  .left-btn {
    left: 0;
  }

  .right-btn {
    right: 0;
  }

  /* 移动端样式 */
  @media (max-width: 768px) {
    .carousel-track img {
      width: 45%;
    }
  }

  /* PC端样式 */
  @media (min-width: 769px) {
    .carousel {
      overflow: visible;
    }

    .carousel-track {
      transform: none;
    }

    .carousel-track img {
      width:230px;
    }

    .carousel-btn {
      display: none;
    }
  }
</style>

{% schema %}
{
  "name": "Photo Wall",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Photo Wall"
    }
  ],
  "blocks": [
    {
      "type": "photo_card",
      "name": "Photo Card",
      "settings": [
        {
          "type": "url",
          "id": "url",
          "label": "Url"
        },
        {
          "type": "image_picker",
          "id": "img",
          "label": "Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Photo Wall",
      "blocks": []
    }
  ]
}
{% endschema %}
